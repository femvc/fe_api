<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Ebbinghaus Intelligent Remember [v1.0]</title>
<script type="text/javascript" src="js/jquery1.11.1.js"></script>
<script type="text/javascript" src="js/hui.js"></script>
<script type="text/javascript" src="js/table.js"></script>

<link rel="stylesheet" type="text/css" href="main.css">

<style>
.hui_checkbox{float:left;}
.hui_radioinput{float:left;padding-right:23px;cursor:pointer;}
.hui_radioinput .hui_radioinput_input{display:none;}
.hui_radioinput .hui_radioinput_icon{background-image:url(/static/img/hui_radioinput.png);background-repeat:no-repeat;background-position:0px -50px;width:18px;height:18px;overflow:hidden;*zoom:1;float:left;margin-right:6px;}
.hui_radioinput .hui_radioinput_text{float:left;}
.hui_radioinput_checked .hui_radioinput_icon{background-image:url(/static/img/hui_radioinput.png);background-repeat:no-repeat;background-position:0px 0px;width:18px;height:18px;overflow:hidden;float:left;margin-right:6px;}
.hui_radioinputgroup{overflow:hidden;float:left;}
.hui_checkbox .hui_checkbox_label{}
.hui_checkbox .hui_checkbox_label a{font-size:14px;}
.hui_checkbox .hui_checkbox_icon{font-family:simsun;margin:1px 10px 0 0;float:left;border:1px solid #d9d9d9;color:#1ba8eb;text-indent:-20px;font-size:15px;font-style:normal;line-height:1.1em;width:16px;height:16px;cursor:pointer;overflow:hidden;}
.hui_checkbox .hui_checkbox_label{color:#666666;font-size:14px;line-height:20px;float:left;padding-left:0px;cursor:pointer;}
.hui_checkbox .hui_checkbox_icon{visibility:visible;color:#68bf4a;text-indent:-100px;}
.hui_checkbox_checked .hui_checkbox_icon{visibility:visible;color:#68bf4a;text-indent:4px;}
.hj001_login_box .hui_checkbox .hui_checkbox_icon{visibility:visible;color:#68bf4a;text-indent:-100px;}
.hj001_login_box .hui_checkbox_checked .hui_checkbox_icon{visibility:visible;color:#68bf4a;text-indent:4px;}

</style>
<script type="text/javascript">
'use strict';
var form;

window.listTable = [
    {
        width: 296,
        title: 'n1',
        sortable: true,
        field: 'name',
        content: function(item) {return item['name'];}
    },
    {
        width: 296,
        title: 'n2',
        field: 'name',
        content: function(item) {return item['name'];}
    },
    {
        width: 296,
        title: 'n3',
        field: 'atcid',
        content: function(item) {return item['atcid'];}
    }
];
window.listData = [
    {'name':'aaaa'},
    {'name':'bbbb'}
];

var form;

window.onload = function(){
    hui.Mockup.stop = true;
    // subject_list
    Requester.get('/ue_api/internal/get_questions?answer=yes', {
        onsuccess: function (result) {
            var data = result[1];
            if (data) {
                
                window.listTable = [
                    {
                        width: 296,
                        title: '题目',
                        sortable: true,
                        field: 'title',
                        content: function(item) {return item['title'];}
                    },
                    {
                        width: 296,
                        title: 'option',
                        field: 'title',
                        content: function(item) {
                            var html = '',
                                tpl = '<li class="#{correct}"><div class="txt">#{index} #{content} </div></li>';
                            for (var i in item['options']) {
                                item['options'][i].index = i;
                                html += hui.format(tpl, item['options'][i])
                            }
                            return '<ul class="option_list">' + html + '</ul>';
                        }
                    },
                    {
                        width: 296,
                        title: 'update_time',
                        field: 'update_time',
                        content: function(item) {return item['update_time'];}
                    },
                    {
                        width: 296,
                        title: 'action',
                        field: 'atcid',
                        content: function(item) {return '<a href="?atcid=' + item['atcid'] + '">edit</a>';}
                    }
                ];

                window.listData = data.items;

                hui.Control.init(hui.g('subject_list'));
                
            };
            
        }
    });

    hui.Control.init(hui.g('subject_add'));
    form = hui.Control.getByFormName('form');

    form.addOption = function (obj) {
        var content = form.getById('options').getMain(),
            list,
            index;
        obj = obj || {};
        if (!obj.index) {
            var list = hui.c('td_index');
            obj.index = 1;
            for (var i=0,len=list.length; i<len; i++) {
                index = parseInt(list[i].innerHTML);
                if (index >= obj.index) {
                    obj.index = index + 1;
                }
            }
        }
        var tpl = 
            '<div class="tr_row" id="content#{index}" ui="type:\'Panel\',formName:\'#{index}\',isFormItem: true"><span class="td_index">#{index}</span>' +
            '    <div ui="type:\'Checkbox\',formName:\'correct\',id:\'correct#{index}\',value:\'yes\',checked:\'#{correct}\'"></div>' +
            '    <textarea cols="40" rows="2" name="content" ui="type:\'TextInput\',id:\'content#{index}\',value11:\'#{content}\'" tabindex="#{index}">#{content}</textarea>' +
            '    <a href="javascript:" class="td_action" onclick="hui.Control.getByFormName(\'form\').removeOption(\'#{index}\')">remove</a>' +
            '</div>';
        hui.util.appendHTML(content, hui.format(tpl, obj));
        hui.Control.create(hui.g('content'+obj.index));
    };
    form.removeOption = function (index) {
        var content = form.getById('options');
        content.getByFormName(index).dispose();
    };
    
    var submit = form.getByFormName('submit');
    submit.onclick = function () {
        var data = hui.Control.getByFormName('form').getParamMap();
        data.options = JSON.stringify(data.options);
        data.major = JSON.stringify(data.major);
        data.level = JSON.stringify(data.level);
        console.log(data);
        Requester.get('/ue_api/internal/save_question', {
            data: data,
            onsuccess: function (err, result) {
                window.location.reload();
            }
        });
    };
    var add = form.getByFormName('add');
    add.onclick = form.addOption;
    
    // subject_add
    var paramlist = hui.Master.parseLocator().query;
    if (paramlist.atcid) {
        hui.g('title').innerHTML = '修改题目';
        Requester.get('/ue_api/internal/get_question?answer=yes', {
            data: {atcid: paramlist.atcid},
            onsuccess: function (result) {
                
                var data = result[1];
                //data.content = JSON.parse(data.content);
                data.atcid = data.atcid;
                
                form.setValueByTree(data);
                form.getById('options').disposeChild();
                
                for (var i in data.options) {
                    data.options[i].index = i;
                    form.addOption(data.options[i]);
                }
            }
        });
    }
    else {
        form.getById('options').disposeChild();
        form.addOption();
        form.addOption();
        form.addOption();
        form.addOption();
    }

    Requester.get('/ue_api/account/get_uid?rand='+Math.random(), {
        onsuccess: function (result) {
            if (result && !result[0] && result[1]) {
                hui.g('uid').innerHTML = result[1];
            }
        }
    });

};

'use strict';
//   __  __   __  __    _____   ______   ______   __  __   _____     
//  /\ \/\ \ /\ \/\ \  /\___ \ /\__  _\ /\  _  \ /\ \/\ \ /\  __`\   
//  \ \ \_\ \\ \ \ \ \ \/__/\ \\/_/\ \/ \ \ \/\ \\ \ `\\ \\ \ \ \_\  
//   \ \  _  \\ \ \ \ \   _\ \ \  \ \ \  \ \  __ \\ \ . ` \\ \ \ =__ 
//    \ \ \ \ \\ \ \_\ \ /\ \_\ \  \_\ \__\ \ \/\ \\ \ \`\ \\ \ \_\ \
//     \ \_\ \_\\ \_____\\ \____/  /\_____\\ \_\ \_\\ \_\ \_\\ \____/
//      \/_/\/_/ \/_____/ \/___/   \/_____/ \/_/\/_/ \/_/\/_/ \/___/ 
//                                                                   
//                                                                   

/**
 * @name 标签云控件
 * @public
 * @author wanghaiyang
 * @date 2014/10/12
 * @example
 <div ui="type:'CheckLabel',id:'ddd',value:[{label_id:1,value:'javascript'},{label_id:2,value:'css'}],
 url_save:'/savelabelUrl',url_remove:'/removelabelUrl',url_list:'/labellist',auto123:'true'"></div>
 */
hui.define('hui_checklabel', ['hui@0.0.1'], function () {
    hui.CheckLabel = function (options, pending) {
        this.isFormItem = true;
        hui.CheckLabel.superClass.call(this, options, 'pending');

        // 类型声明，用于生成控件子dom的id和class
        this.type = String('CheckLabel').toLowerCase();

        //进入控件处理主流程!
        if (pending != 'pending') {
            this.enterControl();
        }
    };

    hui.CheckLabel.prototype = {
        /**
         * @name button的html模板
         * @private
         */
        getCheckLabelTpl: function () {
            var tpl = [
                '<input class="#{0}" old="#{1}" value="#{1}" onblur="hui.Control.getById(\'#{2}\').getBlurHandler()" type="text" size="5" /> '
                //'<!--span class="#{2}">X</span-->'
            ].join('');
            return tpl;
        },
        getUrlSave: function(){
            return this.url_save || this.parentControl.url_save;
        },
        /**
         * @name 渲染控件
         * @public
         */
        render: function () {
            hui.CheckLabel.superClass.prototype.render.call(this);
            var me = this,
                main = me.getMain();

            hui.util.appendHTML(main, hui.format(me.getCheckLabelTpl(),
                me.getClass('textarea'),
                me.label,
                me.getId()
            ));
            // 初始化状态事件
            // main.onclick = me.getHandlerClick();
            // 设定宽度
            // me.width && (main.style.width = me.width + 'px');
            // 设置disabled
            // me.setDisabled(!!me.disabled);
        },
        initBehavior: function () {
            var me = this,
                main = me.getMain(),
                icon = me.getIcon(),
                label = me.getLabel(),
                textarea = hui.cc(me.getClass('textarea'), main);
            me.setChecked(!!me.checked);
            icon.onclick = hui.fn(me.getClickHandler, me);
            icon.onselectstart = new Function('return false;');
            label.ondblclick = hui.fn(me.getDbClickHandler, me);
            //textarea.onblur = hui.fn(me.getBlurHandler, me);
            hui.util.onesc(textarea, hui.fn(me.onesc, me));
        },
        getDbClickHandler: function () {
            var me = this;
            me.editLabel();
        },
        getBlurHandler: function () {
            var me = this;
            me.saveLabel();
        },
        /**
         * @name 编辑标签
         * @public
         */
        editLabel: function () {
            var me = this,
                main = me.getMain(),
                textarea = hui.cc(me.getClass('textarea'), main),
                label = hui.cc(me.getClass('label'), main);
            hui.addClass(main, me.getClass('edit'));
            textarea.focus();
        },
        /**
         * @name 保存标签
         * @public
         */
        saveLabel: function () {
            var me = this,
                label_id = me.getPresetValue(),
                main = me.getMain(),
                label = hui.cc(me.getClass('label'), main),
                textarea = hui.cc(me.getClass('textarea'), main),
                value = textarea.value;
            
                if (value === '' && Number(label_id) > 0) {
                    textarea.value = textarea.getAttribute('old');
                    me.removeLabel();
                }
                else if (textarea.getAttribute('old') !== value) {
                    if (window.confirm('Are you sure change label?')) {
                        me.setInnerHTML(label, value);
                        textarea.setAttribute('old', value);
                        hui.removeClass(main, me.getClass('edit'));

                        hui.Mockup.setRule(me.getUrlSave(), []);
                        window.Requester.get(me.getUrlSave(), {
                            data: {
                                value: label_id,
                                label: value
                            },
                            onsuccess: function () {
                                // alert('savelabel');
                                me.refreshList();
                            }
                        });
                    }
                    else {
                        hui.removeClass(main, me.getClass('edit'));
                        me.onesc();
                    }
                }
                else if (label_id > 0) {
                    hui.removeClass(main, me.getClass('edit'));
                }
            
        },
        /**
         * @name 删除标签
         * @public
         */
        removeLabel: function () {
            var me = this,
                label = me.getMain(),
                label_id = me.getFormName();
            if (window.confirm('Are you sure remove label?')) {
                label.parentNode.removeChild(label);

                if (Number(label_id) > 0) {
                    hui.Mockup.setRule(me.getUrlSave(), []);
                    window.Requester.get(me.getUrlSave(), {
                        data: {
                            value: label_id,
                            label: '',
                            opt: 'remove'
                        },
                        onsuccess: function () {
                            // alert('removelabel');
                            me.refreshList();
                        }
                    });
                }
            }
            else {
                hui.removeClass(me.getMain(), me.getClass('edit'));
            }
        },
        refreshList: function () {},
        onesc: function () {
            var me = this,
                main = me.getMain(),
                textarea = hui.cc(me.getClass('textarea'), main);
            textarea.value = textarea.getAttribute('old');
        }
    };

    // hui.CheckLabel 继承了 hui.Control 
    hui.inherits(hui.CheckLabel, hui.Checkbox);

    hui.util.importCssString(
        '.hui_checklabel{float:left;}' +
        '.hui_checklabel .hui_checklabel_label a{font-size:14px;}' +
        '.hui_checklabel .hui_checklabel_icon{float:left;font-family:simsun;margin:1px 10px 0 0;border:1px solid #d9d9d9;font-size:15px;font-style:normal;line-height:1.1em;width:16px;height:16px;cursor:pointer;overflow:hidden;}' +
        '.hui_checklabel .hui_checklabel_label{float:left;font-family:arial;color:#666666;font-size:14px;line-height:20px;padding-left:0px;cursor:pointer;}' +
        '.hui_checklabel .hui_checklabel_icon{color:#1ba8eb;text-indent:-100px;}' +
        '.hui_checklabel .hui_checklabel_textarea{float:left;font-family:arial;font-size:14px;border:0px;padding-left:2px;min-width:30px;border:1px solid #eee;margin-top:0px; margin-left: -3px;display:none;}' +
        '.hui_checklabel .hui_checklabel_remove{cursor:pointer;font-family:arial;margin:0px 3px;}' +
        '.hui_checklabel .hui_checklabel_remove:hover{color:#fff;background-color:red;}' +
        '.hui_checklabel_checked .hui_checklabel_icon{visibility:visible;color:#68bf4a;text-indent:3px;}' +
        '.hui_checklabel_edit .hui_checklabel_label{display:none;}' +
        '.hui_checklabel_edit .hui_checklabel_textarea{display:inline;}'
    );

});
//-->
</script>

</head>

<body class="page" style="">
<a href="subject_test.htm">subject_test</a> uid: <span id="uid"></span>
<!--target:test-->
<div id="subject_add" class="subject_add">
<!--target:test-->

    <div ui="type:'Panel',formName:'form',url_save:'/ue_api/internal/save_cloudlabel'">
        <div class="tr_row">
            <span class="row_title">大类：</span>
            <div class="row_major">
                <div ui="type:'Checkbox',formName:'major',value:'FE',checked:'checked'"       > FE</div>
                <div ui="type:'Checkbox',formName:'major',value:'PHP'"      > PHP</div>
                <div ui="type:'Checkbox',formName:'major',value:'J2EE'"     > J2EE</div>
                <div ui="type:'Checkbox',formName:'major',value:'.NET'"     > .NET</div>
                <div ui="type:'Checkbox',formName:'major',value:'ROR'"      > ROR</div>
                <div ui="type:'Checkbox',formName:'major',value:'PYTHON'"   > PYTHON</div>
                <div ui="type:'Checkbox',formName:'major',value:'DB'"       > DB</div>
                <div ui="type:'Checkbox',formName:'major',value:'SERVER'"   > SERVER</div>
            </div>
            
        </div>
        <h3 class="form_title">
            <span id="title"> 增加题目</span> 
            <a href="subject_list.htm">add</a>
        </h3>

        <div class="tr_row">
            <input type="hidden" ui="type:'TextInput',formName:'atcid'" />
            <span class="row_title">题目：</span>
            <textarea cols="40" rows="2" name="title" ui="type:'TextInput',id:'title'" tabindex="1"></textarea>
            <button ui="type:'Button',formName:'submit'" tabindex="100">Save</button>
        </div>
        <div class="tr_row">
            <span class="row_title">级别：</span>
            <div class="row_level">
                <div ui="type:'Checkbox',formName:'level',value:'1'"> 初级</div>
                <div ui="type:'Checkbox',formName:'level',value:'3'"> 中级</div>
                <div ui="type:'Checkbox',formName:'level',value:'5'"> 高级</div>
                <div ui="type:'Checkbox',formName:'level',value:'7'"> 架构师</div>
                <div ui="type:'Checkbox',formName:'level',value:'9'"> 专家</div>
            </div>
        </div>
        <div class="tr_row">
            <span class="row_title">小类：</span>
            <div class="row_label">
                <div ui123="type:'CloudLabel',id:'ddd',value:[{label_id:1,value:'javascript'},{label_id:2,value:'css'}],url_save:'/ue_api/internal/save_cloudlabel',url_list:'/ue_api/internal/get_cloudlabels',auto:'true'"></div>

                <label ui="type:'CheckLabel',formName:'label' ,value:'1000000001', label:'html123'"></label>
                <label ui="type:'CheckLabel',formName:'label' ,value:'1000000002', label:'css12'"></label>
                <label ui="type:'CheckLabel',formName:'label' ,value:'1000000003', label:'js34'"></label>
                
            </div>
        </div>
        <div class="row_head">
            <span class="row_title">选项：</span><a href="javascript:" ui="type:'Button',formName:'add'">add</a>
        </div>
        <div ui="type:'Panel',id:'options',isFormItem: true">
        </div>
    </div>
</div>

<div id="subject_list" class="subject_list">
    <h3 class="form_title">题目列表 </h3>
    <div ui="type:'Table',id:'kj',fields:'&listTable',datasource:'&listData',select:'multi',sortable:true,size:{width:500}"></div>
</div>


</body>

</html>
