<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Ebbinghaus Intelligent Remember [v1.0]</title>
<script type="text/javascript" src="js/jquery1.11.1.js"></script>
<script type="text/javascript" src="js/hui.js"></script>
<script>
'use strict';
//   __  __   __  __    _____   ______   ______   __  __   _____     
//  /\ \/\ \ /\ \/\ \  /\___ \ /\__  _\ /\  _  \ /\ \/\ \ /\  __`\   
//  \ \ \_\ \\ \ \ \ \ \/__/\ \\/_/\ \/ \ \ \/\ \\ \ `\\ \\ \ \ \_\  
//   \ \  _  \\ \ \ \ \   _\ \ \  \ \ \  \ \  __ \\ \ . ` \\ \ \ =__ 
//    \ \ \ \ \\ \ \_\ \ /\ \_\ \  \_\ \__\ \ \/\ \\ \ \`\ \\ \ \_\ \
//     \ \_\ \_\\ \_____\\ \____/  /\_____\\ \_\ \_\\ \_\ \_\\ \____/
//      \/_/\/_/ \/_____/ \/___/   \/_____/ \/_/\/_/ \/_/\/_/ \/___/ 
//                                                                   
//                                                                   

/**
 * @name 按钮控件
 * @public
 * @author wanghaiyang
 * @date 2014/05/05
 * @param {Object} options 控件初始化参数.
 */
hui.define('hui_'+String('CloudLabel').toLowerCase(), ['hui@0.0.1'], function () {

    hui.CloudLabel = function (options, pending) {
        this.isFormItem = false; // 注：getParamMap时不需要处理button
        hui.CloudLabel.superClass.call(this, options, 'pending');

        // 类型声明，用于生成控件子dom的id和class
        this.type = String('CloudLabel').toLowerCase();

        //进入控件处理主流程!
        if (pending != 'pending') {
            this.enterControl();
        }
    };

    hui.CloudLabel.prototype = {
        /**
         * @name button的html模板
         * @private
         */
        getTplCloudLabel: function(){
            var tpl = [
                '<span class="cloudlabel_item" label_id="#{label_id}" title="#{value}">',
                '    <span class="text" ondblclick="hui.Control.getById(\'#{ctr_id}\').editLabel  (this, \'#{label_id}\')" >#{value}</span>',
                '    <input class="input"   onblur="hui.Control.getById(\'#{ctr_id}\').saveLabel  (this, \'#{label_id}\')" value="#{value}" type="text" size="5" style="display:none" /> ',
                '    <span class="remove"  onclick="hui.Control.getById(\'#{ctr_id}\').removeLabel(this, \'#{label_id}\')">X</span>',
                '</span>'].join('');
            return tpl;
        },

        /**
         * @name 默认的onclick事件执行函数, 不做任何事，容错
         * @public
         */
        onclick: new Function(),

        /**
         * @name 获取button主区域的html
         * @private
         * @return {String}
         */
        getMainHtml: function () {
            var me = this,
                tpl = me.getTplCloudLabel(),
                html = '',
                list = me.value,
                item,
                ctr_id = me.getId();
            for (var i=0,len=list.length; i<len; i++) {
                item = list[i];
                html += hui.Control.format(tpl, {label_id: item.label_id, value: item.value, ctr_id: ctr_id});
            }

            return html;
        },

        /**
         * @name 渲染控件
         * @public
         */
        render: function () {
            hui.CloudLabel.superClass.prototype.render.call(this);
            var me = this,
                main = me.getMain();

            me.setInnerHTML(main, me.getMainHtml());

            // 初始化状态事件
            main.onclick = me.getHandlerClick();

            // 设定宽度
            me.width && (main.style.width = me.width + 'px');

            // 设置disabled
            me.setDisabled(!!me.disabled);
        },
        /**
         * @name 获取按钮点击的事件处理程序
         * @private
         * @return {function}
         */
        getHandlerClick: function () {
            var me = this;
            return function (e) {
                if (!me.isDisabled()) {
                    me.onclick();
                }
            };
        },
        /**
         * @name 编辑标签
         * @public
         */
        editLabel: function (elem, label_id) {
            var me = this,
                parent = elem.parentNode,
                input = hui.util.findSiblingByClassName(elem, 'input', 'next');
            input.value = elem.value;
            parent.setAttribute('value', elem.value)
            input.style.display = 'inline';
            elem.style.display = 'none';
            
        },
        /**
         * @name 保存标签
         * @public
         */
        saveLabel: function (elem, label_id) {
            var me = this,
                parent = elem.parentNode,
                text = hui.util.findSiblingByClassName(elem, 'text', 'pre');
            me.setInnerHTML(text, elem.value);
            parent.setAttribute('value', elem.value)
            text.style.display = 'inline';
            elem.style.display = 'none';
        },
        /**
         * @name 删除标签
         * @public
         */
        removeLabel: function (elem, label_id) {
            var me = this,
                main = me.getMain(),
                list = hui.c('cloudlabel_item'),
                parent;
            for (var i=list.length-1; i>-1; i--) {
                if (list[i].getAttribute('label_id') === label_id) {
                    parent = list[i].parentNode;
                    parent.removeChild(list[i]);
                }
            }
        }
    };

    // hui.CloudLabel 继承了 hui.Control 
    hui.inherits(hui.CloudLabel, hui.Control);


});
</script>
<style>

</style>


</head>

<body class="page" style="">
    <div ui="type:'CloudLabel',id:'ddd',value:[{label_id:1,value:'javascript'},{label_id:2,value:'css'}]"></div>

<span class="cloudlabel_item" value="javascript" title="javascript"><span class="txt" ondblclick="edit()">javascript</span><input type="text" value="javascript" size="10" /> <span class="del">X</span></span>

<script type="text/javascript">
'use strict';
var form;

var str = 'javascript|Nodejs|HTML|CSS|HTML5|CSS3|canvas|svg|vml|xml|sax|xpath|xlst|JSON|AJAX|XHR|jQuery|Zipto|JS框架|JS库|MVC|MVVM|MD5|RSA|BASE64|mongodb|redis|sql|mysql|sqlserver|oracle|Chrome扩展|Firefox扩展|IE6|IE7|IE8|IE9|IE10|IE11|IEDevToolbar|Firebug|ChromeDebug|Fiddler|Cache|CDN|PS|AI|Font|RGB|CMYK|Cookie|JSONP|CrossDomain|Selinum|WebDriver|DOM|Tomcat|Servlet|HTTP|workspace|cssupdate|doT|markdown|算法|数据结构|兼容性|内存泄露|单元测试|敏捷模式|';

hui.Control.init(document.body);
//-->
</script>


</body>

</html>
