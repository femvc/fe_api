<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Ebbinghaus Intelligent Remember [v1.0]</title>
<script type="text/javascript" src="js/jquery1.11.1.js"></script>
<script type="text/javascript" src="js/hui.js"></script>
<script>

</script>
<style>

</style>


</head>

<body class="page" style="">
    <div ui="type:'CloudLabel',id:'ddd',value:[{label_id:1,value:'javascript'},{label_id:2,value:'css'}],url_save:'/savelabelUrl',url_remove:'/removelabelUrl',url_list:'/labellist',auto123:'true'"></div>

<span class="cloudlabel_item" value="javascript" title="javascript"><span class="txt" ondblclick="edit()">javascript</span><input type="text" value="javascript" size="10" /> <span class="del">X</span></span>

<script type="text/javascript">
'use strict';
var form;

var str = 'javascript|Nodejs|HTML|CSS|HTML5|CSS3|canvas|svg|vml|xml|sax|xpath|xlst|JSON|AJAX|XHR|jQuery|Zipto|JS框架|JS库|MVC|MVVM|MD5|RSA|BASE64|mongodb|redis|sql|mysql|sqlserver|oracle|Chrome扩展|Firefox扩展|IE6|IE7|IE8|IE9|IE10|IE11|IEDevToolbar|Firebug|ChromeDebug|Fiddler|Cache|CDN|PS|AI|Font|RGB|CMYK|Cookie|JSONP|CrossDomain|Selinum|WebDriver|DOM|Tomcat|Servlet|HTTP|workspace|cssupdate|doT|markdown|算法|数据结构|兼容性|内存泄露|单元测试|敏捷模式|';

//'javascript|Nodejs|HTML|CSS|HTML5|CSS3|canvas|svg|vml|xml|sax|xpath|xlst|JSON|AJAX|XHR|jQuery|Zipto|JS框架|JS库|MVC|MVVM|MD5|RSA|BASE64|mongodb|redis|sql|mysql|sqlserver|oracle|Chrome扩展|Firefox扩展|IE6|IE7|IE8|IE9|IE10|IE11|IEDevToolbar|Firebug|ChromeDebug|Fiddler|Cache|CDN|PS|AI|Font|RGB|CMYK|Cookie|JSONP|CrossDomain|Selinum|WebDriver|DOM|Tomcat|Servlet|HTTP|workspace|cssupdate|doT|markdown|算法|数据结构|兼容性|内存泄露|单元测试|敏捷模式|'

'use strict';
//   __  __   __  __    _____   ______   ______   __  __   _____     
//  /\ \/\ \ /\ \/\ \  /\___ \ /\__  _\ /\  _  \ /\ \/\ \ /\  __`\   
//  \ \ \_\ \\ \ \ \ \ \/__/\ \\/_/\ \/ \ \ \/\ \\ \ `\\ \\ \ \ \_\  
//   \ \  _  \\ \ \ \ \   _\ \ \  \ \ \  \ \  __ \\ \ . ` \\ \ \ =__ 
//    \ \ \ \ \\ \ \_\ \ /\ \_\ \  \_\ \__\ \ \/\ \\ \ \`\ \\ \ \_\ \
//     \ \_\ \_\\ \_____\\ \____/  /\_____\\ \_\ \_\\ \_\ \_\\ \____/
//      \/_/\/_/ \/_____/ \/___/   \/_____/ \/_/\/_/ \/_/\/_/ \/___/ 
//                                                                   
//                                                                   

/**
 * @name 标签云控件
 * @public
 * @author wanghaiyang
 * @date 2014/10/12
 * @example
 <div ui="type:'CloudLabel',id:'ddd',value:[{label_id:1,value:'javascript'},{label_id:2,value:'css'}],
 url_save:'/savelabelUrl',url_remove:'/removelabelUrl',url_list:'/labellist',auto123:'true'"></div>
 */
hui.define('hui_' + String('CloudLabel').toLowerCase(), ['hui@0.0.1'], function () {
    hui.CloudLabel = function (options, pending) {
        this.isFormItem = true; // 注：getParamMap时不需要处理button
        hui.CloudLabel.superClass.call(this, options, 'pending');

        // 类型声明，用于生成控件子dom的id和class
        this.type = String('CloudLabel').toLowerCase();

        //进入控件处理主流程!
        if (pending != 'pending') {
            this.enterControl();
        }
    };

    hui.CloudLabel.prototype = {
        /**
         * @name button的html模板
         * @private
         */
        getTplCloudLabel: function () {
            var tpl = [
                '<span class="cloudlabel_item" label_id="#{label_id}" value="#{value}">',
                '    <span class="text" ondblclick="hui.Control.getById(\'#{ctr_id}\').editLabel  (\'#{label_id}\')" >#{value}</span>',
                '    <input class="input"   onblur="hui.Control.getById(\'#{ctr_id}\').saveLabel  (\'#{label_id}\')" value="#{value}" type="text" size="5" style="display:none" /> ',
                '    <span class="remove"  onclick="hui.Control.getById(\'#{ctr_id}\').removeLabel(\'#{label_id}\')">X</span>',
                '</span>'
            ].join('');
            return tpl;
        },

        /**
         * @name 默认的onclick事件执行函数, 不做任何事，容错
         * @public
         */
        onclick: new Function(),
        /**
         * @name 渲染控件
         * @public
         */
        render: function () {
            hui.CloudLabel.superClass.prototype.render.call(this);
            var me = this,
                main = me.getMain();
            // 生成DOM
            if (!me.url_list || !me.auto) {
                me.refreshListCallback();
            }
            else {
                me.refreshList();
            }
            // 初始化状态事件
            main.onclick = me.getHandlerClick();
            // 设定宽度
            me.width && (main.style.width = me.width + 'px');
            // 设置disabled
            me.setDisabled(!!me.disabled);
        },
        /**
         * @name 获取按钮点击的事件处理程序
         * @private
         * @return {function}
         */
        getHandlerClick: function () {
            var me = this;
            return function (e) {
                if (!me.isDisabled()) {
                    me.onclick();
                }
            };
        },
        refreshList: function () {
            var me = this;
            me.getMain().innerHTML = '';
            if (me.url_list) {
                hui.Mockup.setRule(me.url_list, [null, [{
                    label_id: 1,
                    value: 'fff'
                }, {
                    label_id: 2,
                    value: 'eee'
                }]]);
                window.Requester.get(me.url_list, {
                    onsuccess: function (result) {
                        // alert('labellist');
                        if (!result[0] && result[1]) {
                            me.setValue(result[1]);
                            me.refreshListCallback();
                        }
                    }
                });
            }
            else {
                me.refreshListCallback();
            }
        },
        refreshListCallback: function () {
            var me = this,
                list = me.getValue();
            for (var i = 0, len = list.length; i < len; i++) {
                me.addLabel(list[i]);
            }
            me.addLabel({
                value: '',
                label_id: -Math.random()
            });
        },
        /**
         * @name 添加标签
         * @public
         */
        addLabel: function (item) {
            var me = this,
                tpl = me.getTplCloudLabel(),
                main = me.getMain(),
                ctr_id = me.getId(),
                html;
            html = hui.Control.format(tpl, {
                label_id: item.label_id,
                value: item.value,
                ctr_id: ctr_id
            });
            hui.util.appendHTML(main, html);
            me.editLabel(item.label_id);
        },
        /**
         * @name 查找标签
         * @public
         */
        findLabel: function (label_id) {
            var me = this,
                list = hui.c('cloudlabel_item', me.getMain()),
                elem = null;
            for (var i = list.length - 1; i > -1; i--) {
                if (list[i].getAttribute('label_id') === String(label_id)) {
                    elem = list[i];
                    break;
                }
            }
            return elem;
        },
        /**
         * @name 编辑标签
         * @public
         */
        editLabel: function (label_id) {
            var me = this,
                label = me.findLabel(label_id),
                input = hui.cc('input', label),
                text = hui.cc('text', label),
                value = label.getAttribute('value');
            input.value = value;
            input.style.display = 'inline-block';
            input.style.width = text.clientWidth + 'px';
            text.style.display = 'none';
            input.focus();
        },
        /**
         * @name 保存标签
         * @public
         */
        saveLabel: function (label_id) {
            var me = this,
                label = me.findLabel(label_id),
                input = hui.cc('input', label),
                text = hui.cc('text', label),
                value = input.value;
            if (value === '' && Number(label_id) > 0) {
                input.value = label.getAttribute('value');
                me.removeLabel(label_id);
            }
            else if (label.getAttribute('value') !== value) {
                me.setInnerHTML(text, value);
                label.setAttribute('value', value);

                hui.Mockup.setRule(me.url_save, []);
                window.Requester.get(me.url_save, {
                    data: {
                        label_id: label_id,
                        value: value
                    },
                    onsuccess: function () {
                        // alert('savelabel');
                        me.refreshList();
                    }
                });
            }
            else if (label_id > 0) {
                text.style.display = 'inline-block';
                input.style.display = 'none';
            }
        },
        /**
         * @name 删除标签
         * @public
         */
        removeLabel: function (label_id) {
            if (window.confirm('Are you sure remove label?')) {
                var me = this,
                    label = me.findLabel(label_id);
                label.parentNode.removeChild(label);

                if (Number(label_id) > 0) {
                    hui.Mockup.setRule(me.url_save, []);
                    window.Requester.get(me.url_save, {
                        data: {
                            label_id: label_id,
                            value: '',
                            opt: 'remove'
                        },
                        onsuccess: function () {
                            // alert('removelabel');
                            me.refreshList();
                        }
                    });
                }
            }
        }
    };

    // hui.CloudLabel 继承了 hui.Control 
    hui.inherits(hui.CloudLabel, hui.Control);

    hui.util.importCssString(
        '.hui_cloudlabel{}' +
        '.hui_cloudlabel .cloudlabel_item{}' +
        '.hui_cloudlabel .text{display:inline-block;padding-top:6px;font-family:arial;padding-bottom:6px;font-size:16px;padding-left:5px;margin-right:5px;}' +
        '.hui_cloudlabel .input{font-family:arial;font-size:16px;border:0px;padding-left:2px;min-width:30px;border:1px solid #eee;}' +
        '.hui_cloudlabel .remove{cursor:pointer;font-family:arial;margin:0px 3px;}' +
        '.hui_cloudlabel .remove:hover{color:#fff;background-color:red;}'
    );

});


hui.Control.init(document.body);
//-->
</script>


</body>

</html>
